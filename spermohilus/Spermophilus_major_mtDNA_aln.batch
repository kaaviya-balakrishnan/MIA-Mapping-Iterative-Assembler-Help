#!/bin/bash -l
#SBATCH --job-name=bwa_aln
#SBATCH --partition=long
#SBATCH --ntasks=12
#SBATCH --mem 64G

for i in *.collapsed.gz; do
fname=$(basename $i .collapsed.gz)

#collect number of reads in fq.gz file
echo "number of reads:" >>${fname}_Sp_aln.stats
pigz -dc ${fname}_R1_001.fastq.gz|awk 'NR%4==2{c++} END{print c}'>>${fname}_Sp_aln.stats

#check which library it is S1s, S1, L1, LM etc and collect sample and library name
if [ ${fname: -1} == "s" ]
then
 lib=${fname: -3}
 samp_name=${fname:0:$(( $(echo -n $fname|wc -c)-3))}
 else
 lib=${fname: -2}
 samp_name=${fname:0:$(( $(echo -n $fname|wc -c)-2))}
fi
#echo sample and other names
echo "sample:" $fname
echo "lib:" $lib
echo "sample_name:" $samp_name

#map with bwa aln
time -p  bwa aln -t 12 -l 16500 -n 0.01 -o 2  '/mnt/mfs/zagdos/MICROTUS_GENOMES/mtDNA_refs/Spermophilus/Sp_major_mtDNA_rcrs_ref.fa' $i > ${fname}_Sp.collapsed.sai

time -p  bwa aln -t 12  -l 16500 -n 0.01 -o 2 '/mnt/mfs/zagdos/MICROTUS_GENOMES/mtDNA_refs/Spermophilus/Sp_major_mtDNA_rcrs_ref.fa' ${fname}.pair1.truncated.gz> ${fname}_Sp.pair1.truncated.sai

time -p  bwa aln -t 12  -l 16500 -n 0.01 -o 2 '/mnt/mfs/zagdos/MICROTUS_GENOMES/mtDNA_refs/Spermophilus/Sp_major_mtDNA_rcrs_ref.fa' ${fname}.pair2.truncated.gz > ${fname}_Sp.pair2.truncated.sai

time -p  bwa  samse '/mnt/mfs/zagdos/MICROTUS_GENOMES/mtDNA_refs/Spermophilus/Sp_major_mtDNA_rcrs_ref.fa' ${fname}_Sp.collapsed.sai ${fname}.collapsed.gz |samtools view -@ 12 -q 25 -b|samtools sort -@ 12 > ${fname}_Sp_SE_aln.bam 

time -p  bwa  sampe '/mnt/mfs/zagdos/MICROTUS_GENOMES/mtDNA_refs/Spermophilus/Sp_major_mtDNA_rcrs_ref.fa' ${fname}_Sp.pair1.truncated.sai ${fname}_Sp.pair2.truncated.sai ${fname}.pair1.truncated.gz ${fname}.pair2.truncated.gz |samtools view -@ 12 -q 25 -b|samtools  sort -@ 12 > ${fname}_Sp_PE_aln.bam

#clean intermediate files
rm ${fname}_Sp.collapsed.sai
rm ${fname}_Sp.pair1.truncated.sai
rm ${fname}_Sp.pair2.truncated.sai

#merge SE and PE files
time -p samtools merge --threads 12 - ${fname}_Sp_SE_aln.bam ${fname}_Sp_PE_aln.bam |samtools sort --threads 12 >${fname}_Sp_merged_aln.bam

#clean intermediate files
rm ${fname}_Sp_SE_aln.bam
rm ${fname}_Sp_PE_aln.bam


samtools index ${fname}_Sp_merged_aln.bam
 
#generate mapping stats (w duplicates and short reads)
echo "number of mapped reads:" >>${fname}_Sp_aln.stats
samtools view -c -F 260 ${fname}_Sp_merged_aln.bam >>${fname}_Sp_aln.stats
samtools flagstat ${fname}_Sp_merged_aln.bam >>${fname}_Sp_aln.stats

#remove duplicates using samremovedup.py
samtools view -h ${fname}_Sp_merged_aln.bam |python2 /home/users/mbaca/anthill23_soft/samremovedup/samremovedup.py|samtools view -b -@ 12 > ${fname}_Sp_merged_aln_nodup.bam

samtools index ${fname}_Sp_merged_aln_nodup.bam


#remove reads shorter than 30bp
/home/users/mbaca/anthill23_soft/bbmap/reformat.sh -Xmx32G in=${fname}_Sp_merged_aln_nodup.bam out=${fname}_Sp_merged_aln_nodup_30.bam minlength=30 overwrite=true

#/home/users/mbaca/anthill23_soft/bbmap/reformat.sh -Xmx32G in=${fname}_Sp_merged_aln_nodup.bam out=${fname}_Sp_merged_aln_nodup_25.bam minlength=25 overwrite=true


#add read groups
java -Xmx62G -jar '/home/users/mbaca/anthill23_soft/picard.jar' AddOrReplaceReadGroups I=${fname}_Sp_merged_aln_nodup_30.bam O=${fname}_Sp_merged_aln_nodup_30_RG.bam RGID=1 RGPU=20 RGPL=ILLUMINA RGSM=$samp_name RGLB=$lib VALIDATION_STRINGENCY=LENIENT
java -Xmx62G -jar '/home/users/mbaca/anthill23_soft/picard.jar' AddOrReplaceReadGroups I=${fname}_Sp_merged_aln_nodup_25.bam O=${fname}_Sp_merged_aln_nodup_25_RG.bam RGID=1 RGPU=20 RGPL=ILLUMINA RGSM=$samp_name RGLB=$lib VALIDATION_STRINGENCY=LENIENT

#trim 2 bases from each end
/home/users/mbaca/anthill23_soft/bamUtil/bin/bam trimBam ${fname}_Sp_merged_aln_nodup_30_RG.bam - 2 -c|samtools sort -@ 12 > ${fname}_Sp_merged_aln_nodup_30_cl2_RG.bam
/home/users/mbaca/anthill23_soft/bamUtil/bin/bam trimBam ${fname}_Sp_merged_aln_nodup_25_RG.bam - 2 -c|samtools sort -@ 12 > ${fname}_Sp_merged_aln_nodup_25_cl2_RG.bam

samtools index ${fname}_Sp_merged_aln_nodup_30_cl2_RG.bam
samtools index ${fname}_Sp_merged_aln_nodup_25_cl2_RG.bam

#generate mapping stats (wo duplicates and short reads)
echo "number of unique mapped reads:" >>${fname}_Sp_aln.stats
samtools view -c -F 260 ${fname}cd merged_aln_nodup_cl2_RG.bam >>${fname}_Sp_aln.stats

samtools flagstat ${fname}_Sp_merged_aln_nodup_30_cl2_RG.bam >>${fname}_Sp_aln.stats
samtools flagstat ${fname}_Sp_merged_aln_nodup_25_cl2_RG.bam >>${fname}_Sp_aln.stats

rm nameidxtemp.txt
rm nameidxtemp2.txt
echo ${fname}_Sp_30 >>nameidxtemp.txt
tr "\n" "\t" < nameidxtemp.txt >nameidxtemp2.txt
cat nameidxtemp2.txt>>idxstats_Sp_30.txt
rm idxtemp.txt
rm idxtemp2.txt
samtools idxstats ${fname}_Sp_merged_aln_nodup_30_cl2_RG.bam  >> idxtemp.txt 
sed -i '3d' idxtemp.txt 
awk  '{$2=$4=""; print $0}' idxtemp.txt >tmp && mv tmp  idxtemp.txt
tr "\n" "\t" < idxtemp.txt >idxtemp2.txt
sed -i -e '$a\' idxtemp2.txt
cat idxtemp2.txt >> idxstats_Sp_30.txt


rm nameidxtemp2.txt
echo ${fname}_Sp_25 >>nameidxtemp.txt
tr "\n" "\t" < nameidxtemp.txt >nameidxtemp2.txt
cat nameidxtemp2.txt>>idxstats_Sp_25.txt
rm idxtemp.txt
rm idxtemp2.txt
samtools idxstats ${fname}_Sp_merged_aln_nodup_25_cl2_RG.bam  >> idxtemp.txt 
sed -i '3d' idxtemp.txt 
awk  '{$2=$4=""; print $0}' idxtemp.txt >tmp && mv tmp  idxtemp.txt
tr "\n" "\t" < idxtemp.txt >idxtemp2.txt
sed -i -e '$a\' idxtemp2.txt
cat idxtemp2.txt >> idxstats_Sp_25.txt


#remove intermediate files
rm ${fname}_Sp_merged_aln_nodup_30.bam
rm ${fname}_Sp_merged_aln_nodup_25.bam
rm ${fname}_Sp_merged_aln_nodup.bam
rm ${fname}_Sp_merged_aln.bam
rm ${fname}_Sp_merged_aln_nodup.bam.bai
rm ${fname}_Sp_merged_aln.bam.bai

#generate Qualimap report
#time -p /home/users/mbaca/anthill23_soft/qualimap_v2.2.1/qualimap bamqc -bam ${fname}_Sp_merged_aln_nodup_cl2_RG.bam -outfile ${fname}_Sp_merged_aln_nodup_cl2_RG.pdf -nt 16 

done
